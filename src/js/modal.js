import { domRefs } from './artistModal/domRefs.js';
import {
  closeModal,
  initCloseModalListeners,
} from './artistModal/closeModal.js';
import { fetchArtistData } from './artistModal/fetchArtistData.js';
import { renderArtistInfo } from './artistModal/renderArtistInfo.js';
import { renderAlbums } from './artistModal/renderAlbums.js';
import { renderGenres } from './artistModal/renderGenres.js';

export async function openModal(artistId) {
  try {
    // –ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ–¥–∞–ª–∫—É
    domRefs.modal.classList.remove('modal--hidden');
    document.body.classList.add('no-scroll');

    // –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∞—Ä—Ç–∏—Å—Ç–∞
    const artistData = await fetchArtistData(artistId);

    // –û—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞—Ä–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    clearModalContent();

    // –†–µ–Ω–¥–µ—Ä –¥–∞–Ω–∏—Ö
    renderArtistInfo(artistData);
    renderAlbums(artistData.tracksList, artistData.strArtist);

    // –í–∏—Ç—è–≥—É—î–º–æ –∂–∞–Ω—Ä–∏ –∑ artistData
    const genres = artistData.genres || [];
    console.log('üß™ genres container:', domRefs.artist.genres);
    renderGenres(domRefs.artist.genres, genres);
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞—Ä—Ç–∏—Å—Ç–∞:', error.message, error);
    alert('Artist data not found');
    closeModal();
  }
}

function clearModalContent() {
  // –Ø–∫—â–æ —î –æ–±–ª–∞—Å—Ç—ñ, —è–∫—ñ —Ç—Ä–µ–±–∞ —á–∏—Å—Ç–∏—Ç–∏ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–æ–º ‚Äî –¥–æ–¥–∞—î–º–æ —Å—é–¥–∏
  if (domRefs.albumsContainer) domRefs.albumsContainer.innerHTML = '';
  if (domRefs.genres) domRefs.genres.innerHTML = '';
  if (domRefs.artistInfoContainer) domRefs.artistInfoContainer.innerHTML = '';
}

initCloseModalListeners();
